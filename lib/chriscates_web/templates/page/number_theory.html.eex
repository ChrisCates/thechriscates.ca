<div class="content">
  <h2>Number Theory in Javascript</h2>
  <p>
    A quick and short primer to Number Theory with Javascript snippets. Shout out to Kurt Braget
    for being my homie and inspiring me to write this small book.
  </p>
  <h2>Table of Contents</h2>
  <p><a href="#even_and_odd">Even and Odd Numbers</a></p>
  <p><a href="#divisbility_rules">Divisibility Rules</a></p>
  <p><a href="#remainder">Remainders and Modulation</a></p>
  <p><a href="#prime">Prime and Composite Numbers</a></p>
  <p><a href="#mersenneprime">Mersenne Prime Numbers</a></p>
  <p><a href="#primefactors">Prime Factorization</a></p>
  <p><a href="#perfectsquare">Perfect Squares and Cubes</a></p>
  <p><a href="#factors">Factors</a></p>
  <p><a href="#divisionalgorithm">Division Algorithm</a></p>

  <div id="even_and_odd">
    <h2>Even and Odd Numbers</h2>
    <h3>Even numbers are when division by 2 the remainder is 0</h3>
    <h3>Odd Numbers are when division by 2 the remainder is 1</h3>
    <p>Code snippet to identify Even and Odd Numbers</p>
    <script src="https://gist.github.com/ChrisCates/df81fc15dfa0153ce7171f37db587747.js"></script>
    <h3>What does this mean?</h3>
    <p>
      Based on the parity of both functions. This means we can separate them into separate sets.
      Where The Set of Even Numbers has a Parity of 0. Where The Set of Oddd Numbers has a Parity of 1.
    </p>
  </div>

  <div id="divisibility_rules">
    <h2>Divisibility Rules</h2>
    <h3>A number is divisible by 2 if it's last digit is even.</h3>
    <h3>A number is divisible by 3 if it's a multiple of 3.</h3>
    <h3>A number is divisible by 4 if it's a multiple of 4.</h3>
    <h3>A number is divisible by 5 if it's last digit is 0 or 5.</h3>
    <h3>A number is divisible by 6 if it's divisible by both 2 and 3.</h3>
    <h3>A number is divisible by 7 if subtracting the last digit twice from the other digits is a multiple of 7.</h3>
    <h3>A number is divisible by 8 if it's a multiple of 8.</h3>
    <h3>A number is divisible by 9 if it's a multiple of 9.</h3>
    <h3>A number is divisible by 10 if it's last digit is 0.</h3>
    <p>
      Code snippet to identify divisibility through modulation. Keep in mind the implementation
      in Javascript does not represent the theoretical postulations presented above.
      You would need to disect numbers in a more granular approach to achieve such.
      However identifying divisors through modulation is probably the most practical
      divisibility rule you could possibly use.
    </p>
    <script src="https://gist.github.com/ChrisCates/7cc4a9d3c48c5dbca2360cc110bd8be0.js"></script>
  </div>

  <div id="remainder">
    <h2>Remainder and Modulation</h2>
    <p>
      You've probably already observed us using modulus to find even and odd numbers and divisibility.
      The following snippet iterates how to get the remainder from a number and it's divisor.
    </p>
    <script src="https://gist.github.com/ChrisCates/de53d2dd8df3f656e9e875a1e9cfbaea.js"></script>
  </div>

  <div id="prime">
    <h2>Prime and Composite Numbers</h2>
    <p>
      Prime numbers is a natural number (not a decimal) that has no divisors other then one and itself.
      Composite numbers on the otherhand represent numbers that have divisors other then one and itself.
      The following code snippet shows how to identify a prime or composite number.
    </p>
    <script src="https://gist.github.com/ChrisCates/60a743ec29cc3c9dfcbd99028105bdaf.js"></script>
  </div>

  <div id="mersenneprime">
    <h2>Mersenne Prime Numbers</h2>
    <p>
      Mersenne Prime Numbers are when 2^n - 1 is a prime number then n is also a prime number.
      We can compute whether a number is a Mersenne Prime Number with the following code snippet.
    </p>
    <script src="https://gist.github.com/ChrisCates/1b0ddcea4da2725e6e3bcdcecc511c78.js"></script>
  </div>

  <div id="primefactors">
    <h2>Prime Factorization</h2>
    <p>
      Prime Factors are a fundamental theroem in arithmetic. Essentially any number greater than
      1 is either a prime number or can be written as a product of prime numbers. The following
      snippet of code figures out both the prime factors and the multiples required to make
      the product value.
    </p>
    <script src="https://gist.github.com/ChrisCates/07552045d9d6993b114d1c6c2bbd9b46.js"></script>
  </div>

  <div id="perfectsquare">
    <h2>Perfect Squares</h2>
    <p>
      Perfect Squares and Cubes are pretty straight forward. They are literally just exponential formulas.
      2^2 = 2 * 2 which is a perfect square. 3 ^ 3 = 3 * 3 * 3 which is a perfect cube. This can be notated
      by any number that can be multipled accordingly. Surprisingly, Perfect Squares and Prime Factors are
      directly linked in that they can be determined through prime factorization.
    </p>
    <script src="https://gist.github.com/ChrisCates/d8ce8539653b3cbc11ffe8e1893df034.js"></script>
  </div>

  <div id="factors">
    <h2>Factors</h2>
    <p>
      Factors are similar to Prime Factors, except we find any resultant multiple with composite
      and prime numbers. For example the factors of 12 are: 1,2,3,4,6,12 since all those numbers
      can multiply one or the other to create 12.
    </p>
    <script src="https://gist.github.com/ChrisCates/49aba3d0047430ef55ebf817d18d3a73.js"></script>
  </div>

  <div id="divisionalgorithm">
    <h2>Division Algorithm</h2>
    <p>
      The division algorithm is an additive or subtractive method (and thus can be productized)
      methodology to divide numbers. It should give some perspective on how division works.
      Reviewing the Javascript algorithm is especially fascinating since we use recursion through
      while loops.
    </p>
    <script src="https://gist.github.com/ChrisCates/ce2ec4c3b05d43dd39ec80b92d04db09.js"></script>
  </div>

</div>
